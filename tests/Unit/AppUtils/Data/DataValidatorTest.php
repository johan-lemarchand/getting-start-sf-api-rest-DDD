<?php

namespace App\Tests\Unit\AppUtils\Data;

use App\AppUtils\Data\DataValidator;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Validator\Constraints\Email;
use Symfony\Component\Validator\Validator\ValidatorInterface;

class DataValidatorTest extends KernelTestCase
{
    private mixed $_validator;

    /**
     * @throws \Exception
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub


        $this->_validator= static::getContainer()->get(ValidatorInterface::class);
    }
    public function testValidator()
    {
        $dataValidator = new DataValidator(new Request(
            array(),
            array(),
            array(),
            array(),
            array(),
            array(),
            json_encode(array('email' => 'test@test.fr'))
        ), $this->_validator);

        if ($dataValidator->isValid(array('email' => new Email()))) {

            $this->assertTrue(true);
        } else {
            $this->assertFalse(false);
        }
    }

    public function testWrongValidator()
    {
        $dataValidator = new DataValidator(new Request(
            array(),
            array(),
            array(),
            array(),
            array(),
            array(),
            json_encode(array('email' => 'test@test.fr'))
        ), $this->_validator);

        if ($dataValidator->isValid(array('email' => new Email()))) {

            $this->assertFalse(false);
        } else {
            $violations = $dataValidator->getViolations();
            $this->assertGreaterThan(0, count($violations));
            $this->assertTrue(true);
        }
    }
}